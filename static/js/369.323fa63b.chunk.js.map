{"version":3,"file":"static/js/369.323fa63b.chunk.js","mappings":"mSAGO,SAASA,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAEtC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8CF,EAAAA,EAAAA,WAAS,GAAvD,eAAOG,EAAP,KAAwBC,EAAxB,MAEAC,EAAAA,EAAAA,YAAU,WACN,GAAGF,EAGC,OAFAD,EAAcJ,QACdM,GAAmB,EAG1B,GAAC,CAACD,EAAiBL,IAoBpB,OACI,kBAAMQ,OAAO,QAAQC,SAdN,SAACC,GAGhB,GAFAA,EAAMC,kBAEFR,EACA,OAAQS,MAAM,6EAEdX,EAAaE,GACbG,GAAmB,EAI1B,EAGG,WACQ,kBAAOO,KAAK,OAAOC,SApBV,SAACJ,GAClB,IAAQK,EAAUL,EAAMM,OAAhBD,MACRX,EAAcW,EACjB,EAiBsDA,MAAOZ,KAEtD,mBAAQU,KAAK,SAAb,8CAGX,C,YC/Bc,SAASI,IAAe,IAAD,EAElC,GAA4Cf,EAAAA,EAAAA,UAAS,IAArD,eAAOgB,EAAP,KAAuBC,EAAvB,KACA,GAAsCjB,EAAAA,EAAAA,WAAS,GAA/C,eAAOkB,EAAP,KAAoBC,EAApB,KACA,GAA4BnB,EAAAA,EAAAA,UAAS,CAACoB,OAAQ,GAAIC,KAAM,EAAGC,KAAK,EAAOC,SAAS,IAAhF,eAAOH,EAAP,KAAeI,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaJ,IAAI,gBAApB,QAAgC,IAGjDjB,EAAAA,EAAAA,YAAU,WACN,GAAmB,KAAhBuB,GAAsBV,EAGrB,OAFAC,GAAe,QACfK,EAAU,CAACH,KAAM,EAAGD,OAAQQ,EAAaN,KAAK,EAAMC,SAAS,GAGpE,GAAC,CAACK,EAAaV,KAEhBb,EAAAA,EAAAA,YAAU,WAEN,GAAGe,EAAOE,KAAyB,KAAlBF,EAAOA,OAAe,CAAC,IAGrBS,EAHoB,mCAGnC,qGACuBC,EAAAA,EAAAA,IAAeV,EAAOA,OAAQA,EAAOC,MAD5D,QACUU,EADV,QAIaC,QAAQC,OAES,IAAhBb,EAAOC,MACfJ,EAAkBc,EAAKC,SACvBR,GAAU,SAACU,GAAU,yBAAUA,GAAV,IAAgBZ,KAAK,EAAOC,SAAS,GAAO,MAE/DN,GAAkB,SAACiB,GAAU,MAAM,GAAN,eAAWA,IAAX,OAAoBH,EAAKC,SAAS,IAC/DR,GAAU,SAACU,GAAU,yBAAUA,GAAV,IAAgBZ,KAAK,EAAOC,SAAS,GAAO,KANjEb,MAAM,0FAAD,OAAqBU,EAAOA,OAA5B,iIALb,2CAHmC,qDACnCS,GAgBH,CACJ,GAAE,CAACT,IAeJ,OAAO,iCACH,SAACvB,EAAD,CAAYC,YAAa8B,EAAa7B,aAdrB,SAACc,GAClB,GAAGA,IAAUO,EAAOA,OAChB,OAAQV,MAAM,+EAAD,OAAoBG,EAApB,uDAEbW,EAAU,CAACH,KAAM,EAAGD,OAAQP,EAAOS,KAAK,EAAMC,SAAS,IACvDI,EAAgB,CAACQ,MAAOtB,GAE/B,IAS8B,IAA1BG,EAAeiB,SAAgB,SAACG,EAAA,EAAD,CAAWC,SAAUrB,EAAgBsB,aAAY,qKAAmClB,EAAOA,OAA1C,OAE/EA,EAAOG,SAAU,SAACgB,EAAA,EAAD,IAAyC,IAA1BvB,EAAeiB,SAAiB,SAACO,EAAA,EAAD,CAASC,UAT7D,WACd,OAAOjB,GAAU,SAACU,GAAW,OAAO,kBAAIA,GAAX,IAAiBb,KAAMa,EAAKb,KAAO,EAAGC,KAAK,EAAMC,SAAS,GAAM,GAChG,MASJ,C","sources":["components/SearchForm/SearchForm.jsx","Pages/MoviesPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\n\nexport function SearchForm ({searchValue, searchSubmit}) {\n\n    const [inputValue, setInputValue] = useState('')\n    const [firstRenderForm, setFirstRenderForm] = useState(true)\n\n    useEffect(()=>{\n        if(firstRenderForm) {\n            setInputValue(searchValue)\n            setFirstRenderForm(false)\n            return\n        }\n    },[firstRenderForm, searchValue])\n\n    const handelChange = (event) => {\n        const { value } = event.target\n        setInputValue(value)\n    }\n\n    const handelForm = (event) => {\n        event.preventDefault()\n        \n        if(!inputValue) {\n            return  alert('Введіть запит')\n        } else {\n            searchSubmit(inputValue)\n            setFirstRenderForm(false)\n        }\n\n\n    }\n\n    return (\n        <form action=\"query\" onSubmit={handelForm}>\n                <input type=\"text\" onChange={handelChange} value={inputValue}/>\n\n            <button type='submit'>Пошук</button>\n        </form>  \n    )\n}","import { useEffect, useState } from \"react\"\nimport { getSearchFilms } from \"../api/getFilms\"\n\n\nimport FilmsList from \"components/FilmsList/FilmsList\";\nimport { Loading } from \"components/Loading/Loading\";\nimport { AddMore } from \"components/AddMore/AddMore\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function MoviesPage () {\n\n    const [searchfilmList, setSearchFilmList] = useState([])\n    const [firstRender, setFirstRender] = useState(true)\n    const [search, setSearch] = useState({search: \"\", page: 1, get: false, loading: false})\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchQuery = searchParams.get('query') ?? ''\n    \n\n    useEffect(() => {\n        if(searchQuery !== \"\" && firstRender) {\n            setFirstRender(false)\n            setSearch({page: 1, search: searchQuery, get: true, loading: true})\n            return\n        }\n    },[searchQuery, firstRender])\n\n    useEffect(() => {\n        \n        if(search.get && search.search !== \"\") {\n            responceSearch()\n\n            async function responceSearch () {\n                const data = await getSearchFilms(search.search, search.page)\n\n\n                if(!data.results.length) {\n                    alert(`За вишим запитом ${search.search}  результати не знайдені`)\n                } else if(search.page === 1) {\n                  setSearchFilmList(data.results)\n                  setSearch((prev) => {return{...prev, get: false, loading: false}})\n                } else {\n                    setSearchFilmList((prev) => {return [...prev, ...data.results]})\n                    setSearch((prev) => {return{...prev, get: false, loading: false}})\n                }\n            }\n        }\n    }, [search])\n\n    const searchSubmit = (value) => {\n        if(value === search.search) {\n            return  alert(`Ви ввели запит \"${value}\" повторно`)\n        } else {\n            setSearch({page: 1, search: value, get: true, loading: true})\n            setSearchParams({query: value})\n        }\n    }\n\n    const addMoreFn = () => {\n        return setSearch((prev) => { return {...prev, page: prev.page + 1, get: true, loading: true}})\n    }\n\n    return <>\n        <SearchForm searchValue={searchQuery} searchSubmit={searchSubmit}/>\n\n        {searchfilmList.length !== 0 && <FilmsList filmData={searchfilmList} sectionTitle={`Результати пошуку за запитом \"${search.search}\"`}/>}\n\n        { search.loading ? <Loading /> : (searchfilmList.length !== 0 &&  <AddMore addMoreFn={addMoreFn}/>)}\n    </>\n}"],"names":["SearchForm","searchValue","searchSubmit","useState","inputValue","setInputValue","firstRenderForm","setFirstRenderForm","useEffect","action","onSubmit","event","preventDefault","alert","type","onChange","value","target","MoviesPage","searchfilmList","setSearchFilmList","firstRender","setFirstRender","search","page","get","loading","setSearch","useSearchParams","searchParams","setSearchParams","searchQuery","responceSearch","getSearchFilms","data","results","length","prev","query","FilmsList","filmData","sectionTitle","Loading","AddMore","addMoreFn"],"sourceRoot":""}